@using ooap_lab_1.Models
@using MudBlazorWebApp1.Components.Models

@inject ISnackbar Snackbar
@inject IDialogService DialogService

@using MudBlazorWebApp1.Components.Models.Tests


<MudDialog>
    <DialogContent>
        <div>
            <MudText>@Project.Name</MudText>
            <MudTextField T=string @bind-Value=@sourceCode Label="Исходный код" />
            <MudTextField T=string @bind-Value=@commitMessage Label="Пояснение к изменению" />
            
            <MudButton OnClick="@(() => ChooseType(jiraTests))">Выбрать тесты jira</MudButton>
            <MudButton OnClick="@(() => ChooseType(loadTest))">Выбрать нагрузочные тесты</MudButton>
        </div>
   </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public Project Project { get; set; }



    private string commitMessage = String.Empty;
    private string sourceCode = String.Empty;
    public JiraTests jiraTests = new("Тесты Jira");
    public LoadTest loadTest = new("Нагрузочное тестирование");
    ITest selected;

    protected override void OnInitialized()
    {
        selected = jiraTests;
        sourceCode = Project.Commits[Project.Commits.Count() - 1].SourceCode;

    }

    private void ChooseType(ITest test)
    {
        selected = test;
        Snackbar.Add($"Выбрано: {test.ToString()}", Severity.Success);
    }

    void Submit()
    {
        if (commitMessage != string.Empty)
        {
            var newCommit = new Commit(commitMessage, sourceCode);

            
            newCommit.SetTestType(selected);
            var result = newCommit.StartTest();

            if (result)
            {
                Snackbar.Add("Все тесты прошли успешно!", Severity.Success);
            }
            else
            {
                Snackbar.Add("Тесты завалены!", Severity.Error);
            }
            Project.Commits.Add(new Commit(commitMessage, sourceCode));
        }

        MudDialog.Close(DialogResult.Ok(true));

        StateHasChanged();
    }

    void Cancel() => MudDialog.Cancel();
}
